Required for "ready to install":
* add color-bar to prediction explanation page

* "Opslaan..." button
  * calls a script (which can pushes data to a DB for the portal
    * we have adfice.exportForPatient
  * makes this record view-only in this tool
    * we have adfice.finalizeAdviceForPatient

* "Haal gewijzigde..." button ?
  * should this call a script ?
  * we have adfice.clearAdviceForPatient

Required changes to rules (Ace will do these):
* Make sure every text ends with a period. If there is a free text box,
  the period should come before the free text box.
  (Laxans: should probably become Laxans aanbevolen.)
* Make sure that all texts begin with a capital letter.

Wanted for usability:
* Buttons to hide advice box and non-selected checkbox rows for individual
  medications in clinician view

Not required for "ready to install" but will be required for study:
* Build a CENTOS/RHEL vm, with everything -- no containers
* logging:
  * log whether system was used at all
  * whether Print and Send to portal was used
  * which advice was (in the end) selected
  * which advice had been pre-selected (and thus, was it unchecked)
    to compare what doctor ultimately chose
  * reconstruct the information displayed to the user about the patient
    (for example, DELETEs from databases could TRIGGER an INSERT in to
     an archive table)
  * print button
    * no need for extra printer friendliness yet
    * but log it

* create "stub" function:
  * "Hoe gebruik ik..." leads to (stub) training page

Mid Priority:
* Each acceptance test should start an instance of AdficeWebserver
* test reconnect behavior on web-socket drop or AdficeWebserver restart
* specify DB port, separate instance for local human testing, automated testing
* CI tests should use HTTPS too, possibly self-signed certs
* the "consult view" button could be renamed "Consult verneiuwen" in order to
  remove the items which have been un-checked/disabled
  * the students suggested using a "reload" icon instead
* record changes between views, connections and disconnects
* styling, e.g.: viewers in yellow, hidden when 1
* test-cafe : get the innnerHTML out of an element
* sanity check choices of checkboxes
* try to use "deeplinken" for FK links
* if no checkboxes are selected for a medication, display text "Geen advies."
  in the patient view.

Low Priority:
* allow user to fill in missing values in prediction model page
* naming consistency thoughout the javascript
* naming consistency thoughout the html
* create table atc_code(id int PK, code varchar(100))


Important, but unable to do yet:
* The designers may decide to have **placeholder text** instead of
  **pre-filled** text for the free text boxes.
  (They actually asked to do both; I veto'd this suggestion.)
* Once we know something about how authentication will work, we may need to do
  something to prevent users without authentication from loading the data.
* Getting data out of Epic
* Sending data to research database
