Important:
* figure out why last test in "Test user entering values" (TestCafe) fails, even though performing the actions manually gives the correct result.
* Fix IE bugs:
  * copy EHR text does not work in IE: copies unselected as well as selected texts
    This seems to be a real bugger. Microsoft Documentation seems to insist this problem was fixed by IE9:
	https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752299(v=vs.85)
	The Internet seems to believe that using .innerText is risky, because it is implemented slightly differently in each browser:
	http://clubajax.org/plain-text-vs-innertext-vs-textcontent/
	Maybe using text nodes will work?
	Getting the text out of the database again may be the least-worst solution. 
	(Or just filling this box with data from the databse rather than using css visibility. Then Ctrl+C will also work as expected.
	If we go with this solution, we may want to do the same for the Advice page, since it will have the same problem when copied.)
* Getting data out of EHR
  * see email for notes regarding which APIs we will use
  * this will probably need to be in its own closed-source repo (the specification from Epic has no license information)
  * log whether system was used at all -- depends upon EHR connection
    (EHR will provide data, the presence of the data indicates system was used)
* automate tests for CDSS working on IE11
* fix testcafe acceptance tests to work with testcafe v1.16.1
* entering text in a text box should automatically check its check box (not mentioned in usability but seems like a good idea)
* search and replace nonprinting chars in refpages (looks like maybe all the HTML special chars were replaced with nonprinting chars rather than the other way around...)
* content has been added for Hoe gebruik ik... (but it's really quite bad; I guess I will make new content)
* We will need to log which users logged in and viewed records. Add this to our logging data.

Valportaal
* change display of risk gradient to match cdss
* valportaal: links to apotheek.nl
* enlarge button for valportaal
  * is this ctrl-shift-plus ? Then maybe do both for cross-browser:
    * document.body.style.MozTransform = 'scale(400%)'
    * document.body.style.zoom = '400%'
    * (be sure to check footer positioning if there is a footer)
* search button for valportaal
  * static content only?
  * https://www.plainlight.com/duckduckgo-search.html#custom-search ?
* testing of the static/ served javascript files
* make a "build valportaal vm" script
* small textual changes and links provided in spreadsheet "valportaal broken links etc.xlsx"


Required changes to rules (Ace will do these):
* Make sure every text ends with a period. If there is a free text box,
  the period should come before the free text box.
  (Laxans: should probably become Laxans aanbevolen.)
* Make sure that all texts begin with a capital letter.


Not required for "ready to install" but will be required for study:
* logging:
  * log in the same table that send to portal was done

Mid Priority:
* Add a way to clear user-entered prediction model data. This can be used by the TestCafe test to clean up after itself.
* Each acceptance test should start an instance of adfice-webserver
  * refactor adfice-webserver-runner to be more testable
  * refactor the client js (static/patient.js) to be more testable
* automate test reconnect behavior on web-socket drop
  (or adfice-webserver-runner restart)
* specify DB port, separate instance for local human testing, automated testing
* specify DB per-test, or otherwise ensure:
  * tests can be run in parallel
  * data mutations in one test do not impact a different test
  * ensure each test operates on separate data
* CI tests should use HTTPS too, possibly self-signed certs
* the "consult view" button could be renamed "Consult vernieuwen" in order to
  remove the items which have been un-checked/disabled
  * the students suggested using a "reload" icon instead
* record changes between views, connections and disconnects
  * see print logging
* styling, e.g.: viewers in yellow, hidden when 1
* test-cafe : get the innnerHTML out of an element
* sanity check choices of checkboxes
  * e.g.: "stop medication A" && "continue medication A"
* write a log archival script
  raise priority if this looks like it is growing too fast:

      SELECT table_name
           , table_rows
           , ROUND((data_length + index_length)/POWER(1024,2),1) AS size_mb
           , (data_length + index_length) AS size_bytes
        FROM information_schema.tables
       WHERE table_schema='adfice'
    ORDER BY size_bytes DESC;
* make black-and-white printer-friendly css (wait until vue/client-ejs)

Low Priority:
* allow user to fill in missing values in prediction model page
* naming consistency thoughout the css
* naming consistency thoughout the javascript
* naming consistency thoughout the html
* tidy css page and make naming more consistant
* testcafe checkboxes contained in display:flex divs are not clickable
  * open a bug with a tiny reproducible example

Requested (not required) changes to rules:
* Rule 50: Split to personalize by age
* Rule 45: Split to personalize by +/- OH.
* Rule 45: Split into using enalapril/something else
* See if there is sufficient evidence to suggest mirabegron as alternative for G04BD
* See if there is sufficient evidence to suggest testerosterone 5 aplha reductase inhibitors (dutasteride) as alternative for G04CA

Important, but unable to do yet:
* Once we know something about how authentication will work, we may need to do
  something to prevent users without authentication from loading the data.
  * session expiration? browser caching? detect back button, return to page?
* Sending data to research database
* Users wanted a "close this tab" button on each refpage that closes the tab. However, the method that works on IE is considered bad practice, and might not work in the actual deployment environment. We can look into this in the actual deployment enviornment.
