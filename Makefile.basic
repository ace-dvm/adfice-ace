# SPDX-License-Identifier: GPL-3.0-or-later
# Copyright (C) 2021 S. K. Medlock, E. K. Herman, K. M. Shaw
#
# Makefile cheat-sheet:
#
# $@ : target label
# $< : the first prerequisite after the colon
# $^ : all of the prerequisite files
# $* : wildcard matched part
#
# Target-specific Variable syntax:
# https://www.gnu.org/software/make/manual/html_node/Target_002dspecific.html
#
# patsubst : $(patsubst pattern,replacement,text)
#	https://www.gnu.org/software/make/manual/html_node/Text-Functions.html
# call : $(call func,param1,param2,...)
#	https://www.gnu.org/software/make/manual/html_node/Call-Function.html
# define :
#	https://www.gnu.org/software/make/manual/html_node/Multi_002dLine.html

SHELL=/bin/bash
ADFICE_VERSION=0.0.0

default: check

check: thirdparty check-unit
	./acceptance-test-patient-validation.sh
	@echo "SUCCESS $@"

thirdparty: node_modules/ws/lib/websocket-server.js \
		static/thirdparty/showdown.min.js \
		static/thirdparty/showdown.min.js.map
		@echo "$@ complete"

check-unit: adfice-dbsetup grep-ie-bad-words
	npm test adfice
	@echo "SUCCESS $@"

adfice-dbsetup: npmsetup
	bin/db-create-tables.sh db-scripts.env
	bin/load-synthetic-data.sh db-scripts.env
	@echo "$@ complete"

npmsetup: node_modules/ws/lib/websocket-server.js
	@echo "$@ complete"

IE_BADWORDS_RE='await\|async\|forEach\|=>\|'\`
BROWSER_JS := $(shell ls static/*js)

grep-ie-bad-words: $(BROWSER_JS)
	for FILE in $(BROWSER_JS); do \
		if [ $$(grep -c $(IE_BADWORDS_RE) $$FILE ) -eq 0 ]; then \
			true; \
		else \
			echo $$FILE; \
			grep $(IE_BADWORDS_RE) $$FILE; \
			exit 1; \
		fi; \
	done
	@echo "$@ complete"
